initialize a git repository
-> git init

add changes to staging area
-> git add --all
-> git add filename


reset changes addeds to the stagin area
-> gi reset HEAD filename
-> git reset filename
-> git reset -- affects all files

commit chnages to local repo
-> git commit -m "commit meesage"

update commit message of recent commit
-> git commit --amend -m "updated"

history of commits
-> git log  #show all commit history
-> git log -1 #shows recent commit
-> git log --author="authorusername"  #shows commit of given author
-> git log --since="date"  #show commits after given date
-> git log --until="date"  #shows commits until given date
-> git log --oneline  #shows commits history in one line
-> git log --before = "date"  #same as --until
-> git log  --after = "date"   #same as --since

adding and commiting at once
-> git commit -am "commit message" #can only used when files that changed commited atleast once


viewing changes made in a file
-> git diff # ++ denotes new changes, -- denotes previous changes

viewing changes added to staging area
-> git diff --staged

deleting a file from local repo
-> git rm filename  #never delete a file direclty using rm from repo, use git rm file


to revert the changes made in a file to the previous commit in case any error pops up,
-> git checkout --filename

to clean/remove fiile not in the staging area
-> git clean -f  # prompts to whether remove
-> git clean -n  #removes untracked files in the folder
-> git clean -f filename #remove a specific untracked file
   # only remove untracked files - cant remove tracked files

ignoring files
-> add files to .gitignore

ignoring all files with a specific extension but tracking specific file in those
-> add *.css to .gitignore  # ignored all css files
-> add !file.css to .gitignore # tracked only one css file


removing commited file from local repo
-> git rm --cached filename   #it removes file from repo but not from the machine

git branching - basics
-> git branch  #all branches
-> git branch branchname #new branch
-> git checkout branchname #checkout to new branch
-> git checkout -b branchname #create nd checkout to new branch at same time

Note: changes made in sub branch doesnt affect master branch unless they r merged.




